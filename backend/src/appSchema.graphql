# import * from './generated/prisma.graphql'

type Query {
  me: User
  users: [User]!
  pages: [Page]
  page(id: ID): Page
  mediaFiles: [Media]
  mediaFile(id: ID): Media
  faqs: [Faq]
  faq(id: ID): Faq
  faqCategories: [FaqCategory]
  faqCategory(id: ID): FaqCategory
}

input BlockInput {
  id: ID
  title: String
  image: String
  video: String
  style: String
  content: String
  order: Int
}

input BoxInput {
  id: ID
  title: String
  image: String
  video: String
  style: String
  content: String
  order: Int
}

input ProConInput {
  id: ID
  content: String
  order: Int
}

input ProsAndConsInput {
  id: ID
  title: String
  pros: [ProConInput]
  cons: [ProConInput]
  order: Int
}

type Mutation {
  signup(email: String!, password: String!, name: String!): User!
  login(email: String!, password: String!): User!
  logout: SuccessMessage
  resetPassword(
    resetToken: String!
    password: String!
    confirmPassword: String!
  ): User!
  addPage(
    title: String!
    slug: String!
    image: String
    type: PageType!
    vertical: String
    blocks: [BlockInput]
    boxes: [BoxInput]
    prosAndCons: [ProsAndConsInput]
  ): Page!
  updatePage(
    id: ID!
    title: String!
    slug: String!
    image: String
    type: PageType!
    vertical: String
    blocks: [BlockInput]
    boxes: [BoxInput]
    prosAndCons: [ProsAndConsInput]
  ): Page!
  upsertPage(
    id: ID!
    title: String!
    slug: String!
    image: String
    type: PageType!
    vertical: String
  ): Page!
  upsertBlock(
    id: ID!
    page: ID!
    media: ID
    title: String!
    image: String
    video: String
    style: String
    content: String
    order: Int
  ): Block
  deleteBlock(id: ID!): Block

  updateMedia(id: ID!, title: String, altText: String): Media

  addBlock(
    title: String!
    image: String
    video: String
    style: String
    content: String
    pageId: String
  ): Block!

  addFaq(
    title: String!
    description: String
    short_description: String
    slug: String
    vertical: String
    category: [ID]
    authors: [ID!]!
    readingTime: Int
    order: Int
    variant: [String]
    tag: [String]
  ): Faq!

  updateFaq(
    id: ID!
    title: String!
    description: String
    short_description: String
    slug: String
    vertical: String
    category: [ID]
    authors: [ID!]!
    readingTime: Int
    order: Int
    variant: [String]
    tag: [String]
  ): Faq!

  deleteFaq(id: ID!): Faq!

  addFaqCategory(
    name: String!
    slug: String
    description: String
    faqs: [ID]
  ): FaqCategory!

  updateFaqCategory(
    id: ID!
    name: String!
    slug: String
    description: String
    faqs: [ID]
  ): FaqCategory!

  deleteFaqCategory(id: ID!): FaqCategory!
}

type SuccessMessage {
  message: String
}

type User {
  id: ID!
  name: String!
  email: String!
  password: String!
  permissions: [Permission!]!
}

type Media {
  id: ID!
  url: String!
  title: String
  altText: String
}
